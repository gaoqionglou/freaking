<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:dist="http://schemas.android.com/apk/distribution"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.kotlin.freaking">

    <dist:module dist:instant="true" />

    <!-- Required -->
    <uses-permission android:name="com.kotlin.freaking.permission.JPUSH_MESSAGE" />
    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <!-- Optional. Required for location feature -->
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" /> <!-- 用于开启 debug 版本的应用在 6.0 系统上的层叠窗口权限 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <application
        android:name=".FreakApp"
        android:allowBackup="true"
        android:appComponentFactory="28.0.0"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:ignore="GoogleAppIndexingWarning"
        tools:replace="android:appComponentFactory">
        <activity
            android:name=".app.MainActivity"
            android:label="@string/title_activity_main"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--适配华为（huawei）刘海屏-->
        <meta-data
            android:name="android.notch_support"
            android:value="true" />
        <!--适配小米（xiaomi）刘海屏-->
        <meta-data
            android:name="notch.config"
            android:value="portrait|landscape" />

        <!-- Since JCore2.0.0 Required SDK核心功能-->
        <!-- 可配置android:process参数将Service放在其他进程中；android:enabled属性不能是false -->
        <!-- 这个是自定义Service，要继承极光JCommonService，可以在更多手机平台上使得推送通道保持的更稳定 -->
        <service
            android:name="com.kotlin.freaking.push.PushService"
            android:enabled="true"
            android:exported="false"
            android:process=":pushcore">
            <intent-filter>
                <action android:name="cn.jiguang.user.service.action" />
            </intent-filter>
        </service>

        <!-- Required since 3.0.7 -->
        <!-- 新的 tag/alias 接口结果返回需要开发者配置一个自定的广播 -->
        <!-- 3.3.0开始所有事件将通过该类回调 -->
        <!-- 该广播需要继承 JPush 提供的 JPushMessageReceiver 类, 并如下新增一个 Intent-Filter -->
        <receiver
            android:name="com.kotlin.freaking.push.PushMessageReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.RECEIVE_MESSAGE" />
                <category android:name="com.kotlin.freaking" />
            </intent-filter>
        </receiver>

        <!--
        通过Jcenter引入极光的sdk可以不用配下面

                &lt;!&ndash; Rich push 核心功能 since 2.0.6&ndash;&gt;
                <activity
                    android:name="cn.jpush.android.ui.PopWinActivity"
                    android:theme="@style/MyDialogStyle"
                    tools:replace="android:exported"
                    android:exported="false">
                </activity>

                &lt;!&ndash; Required SDK核心功能&ndash;&gt;
                <activity
                    android:name="cn.jpush.android.ui.PushActivity"
                    android:configChanges="orientation|keyboardHidden"
                    android:theme="@android:style/Theme.NoTitleBar"
                    tools:replace="android:exported"
                    android:exported="false">
                    <intent-filter>
                        <action android:name="cn.jpush.android.ui.PushActivity" />
                        <category android:name="android.intent.category.DEFAULT" />
                        <category android:name="com.kotlin.freaking" />
                    </intent-filter>
                </activity>

                &lt;!&ndash; Required SDK 核心功能&ndash;&gt;
                &lt;!&ndash; 可配置android:process参数将PushService放在其他进程中 &ndash;&gt;
                <service
                    android:name="cn.jpush.android.service.PushService"
                    android:process=":pushcore"
                    android:exported="false">
                    <intent-filter>
                        <action android:name="cn.jpush.android.intent.REGISTER" />
                        <action android:name="cn.jpush.android.intent.REPORT" />
                        <action android:name="cn.jpush.android.intent.PushService" />
                        <action android:name="cn.jpush.android.intent.PUSH_TIME" />
                    </intent-filter>
                </service>

                &lt;!&ndash; since 3.0.9 Required SDK 核心功能&ndash;&gt;
                <provider
                    android:authorities="com.kotlin.freaking.DataProvider"
                    android:name="cn.jpush.android.service.DataProvider"
                    android:process=":pushcore"
                    android:exported="false"
                    />

                &lt;!&ndash; since 1.8.0 option 可选项。用于同一设备中不同应用的JPush服务相互拉起的功能。 &ndash;&gt;
                &lt;!&ndash; 若不启用该功能可删除该组件，将不拉起其他应用也不能被其他应用拉起 &ndash;&gt;
                <service
                    android:name="cn.jpush.android.service.DaemonService"
                    android:enabled="true"
                    android:exported="true">
                    <intent-filter>
                        <action android:name="cn.jpush.android.intent.DaemonService" />
                        <category android:name="com.kotlin.freaking" />
                    </intent-filter>

                </service>

                &lt;!&ndash; since 3.1.0 Required SDK 核心功能&ndash;&gt;
                <provider
                    android:authorities="com.kotlin.freaking.DownloadProvider"
                    android:name="cn.jpush.android.service.DownloadProvider"
                    android:exported="true"
                    />

                &lt;!&ndash; Required SDK核心功能&ndash;&gt;
                <receiver
                    android:name="cn.jpush.android.service.PushReceiver"
                    android:enabled="true"
                    android:exported="false">
                    <intent-filter android:priority="1000">
                        <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY" />   &lt;!&ndash;Required  显示通知栏 &ndash;&gt;
                        <category android:name="com.kotlin.freaking" />
                    </intent-filter>
                    <intent-filter>
                        <action android:name="android.intent.action.USER_PRESENT" />
                        <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                    </intent-filter>
                    &lt;!&ndash; Optional &ndash;&gt;
                    <intent-filter>
                        <action android:name="android.intent.action.PACKAGE_ADDED" />
                        <action android:name="android.intent.action.PACKAGE_REMOVED" />

                        <data android:scheme="package" />
                    </intent-filter>
                </receiver>

                &lt;!&ndash; Required SDK核心功能&ndash;&gt;
                <receiver android:name="cn.jpush.android.service.AlarmReceiver" android:exported="false"/>


                &lt;!&ndash; 3.5.0新增，用于定时展示功能 &ndash;&gt;
                <receiver android:name="cn.jpush.android.service.SchedulerReceiver" android:exported="false"/>
        -->

    </application>

</manifest>